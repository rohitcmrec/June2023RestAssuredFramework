<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="API Regression Suite" duration-ms="29797" started-at="2023-10-01T08:02:15 IST" finished-at="2023-10-01T08:02:45 IST">
    <groups>
    </groups>
    <test name="Go Rest API Test GetUser" duration-ms="9469" started-at="2023-10-01T08:02:15 IST" finished-at="2023-10-01T08:02:24 IST">
      <class name="com.qa.gorest.tests.GetUserDetails">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="setUp" is-config="true" duration-ms="594" started-at="2023-10-01T08:02:15 IST" finished-at="2023-10-01T08:02:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://gorest.co.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getUserSetUp()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getUserSetUp" is-config="true" duration-ms="141" started-at="2023-10-01T08:02:15 IST" finished-at="2023-10-01T08:02:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetUp -->
        <test-method status="PASS" signature="getAllUserDetails()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getAllUserDetails" duration-ms="3344" started-at="2023-10-01T08:02:16 IST" finished-at="2023-10-01T08:02:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUserDetails -->
        <test-method status="PASS" signature="getUserSetUp()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getUserSetUp" is-config="true" duration-ms="16" started-at="2023-10-01T08:02:19 IST" finished-at="2023-10-01T08:02:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetUp -->
        <test-method status="FAIL" signature="getUserDetail()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getUserDetail" duration-ms="2391" started-at="2023-10-01T08:02:19 IST" finished-at="2023-10-01T08:02:21 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path status doesn't match.
Expected: is "INACTIVE"
  Actual: active
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path status doesn't match.
Expected: is "INACTIVE"
  Actual: active

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at com.qa.gorest.tests.GetUserDetails.getUserDetail(GetUserDetails.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserDetail -->
        <test-method status="PASS" signature="getUserSetUp()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:22 IST" finished-at="2023-10-01T08:02:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserSetUp -->
        <test-method status="PASS" signature="getUserDetailWithQueryParam()[pri:0, instance:com.qa.gorest.tests.GetUserDetails@78ffe6dc]" name="getUserDetailWithQueryParam" duration-ms="2640" started-at="2023-10-01T08:02:22 IST" finished-at="2023-10-01T08:02:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserDetailWithQueryParam -->
      </class> <!-- com.qa.gorest.tests.GetUserDetails -->
    </test> <!-- Go Rest API Test GetUser -->
    <test name="Go Rest API Test CreateUser" duration-ms="13484" started-at="2023-10-01T08:02:25 IST" finished-at="2023-10-01T08:02:38 IST">
      <class name="com.qa.gorest.tests.CreateUser">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="setUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:25 IST" finished-at="2023-10-01T08:02:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://gorest.co.in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createUserTestUsingExcel(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserTestUsingExcel" duration-ms="5204" started-at="2023-10-01T08:02:25 IST" data-provider="getUserExcel" finished-at="2023-10-01T08:02:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rohit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTestUsingExcel -->
        <test-method status="PASS" signature="createUserSetUp()[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:25 IST" finished-at="2023-10-01T08:02:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetUp -->
        <test-method status="PASS" signature="createUserSetUp()[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:30 IST" finished-at="2023-10-01T08:02:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetUp -->
        <test-method status="PASS" signature="createUserTestUsingExcel(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserTestUsingExcel" duration-ms="2843" started-at="2023-10-01T08:02:30 IST" data-provider="getUserExcel" finished-at="2023-10-01T08:02:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Female]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Inactive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTestUsingExcel -->
        <test-method status="PASS" signature="createUserSetUp()[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:33 IST" finished-at="2023-10-01T08:02:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetUp -->
        <test-method status="PASS" signature="createUserTestUsingExcel(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.gorest.tests.CreateUser@1649b0e6]" name="createUserTestUsingExcel" duration-ms="4953" started-at="2023-10-01T08:02:33 IST" data-provider="getUserExcel" finished-at="2023-10-01T08:02:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rocy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTestUsingExcel -->
      </class> <!-- com.qa.gorest.tests.CreateUser -->
    </test> <!-- Go Rest API Test CreateUser -->
    <test name="Circuit API Test" duration-ms="3016" started-at="2023-10-01T08:02:38 IST" finished-at="2023-10-01T08:02:41 IST">
      <class name="com.qa.gorest.tests.GetCircuitDetails">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.GetCircuitDetails@2abf4075]" name="setUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:38 IST" finished-at="2023-10-01T08:02:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ergast.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createUserSetUp()[pri:0, instance:com.qa.gorest.tests.GetCircuitDetails@2abf4075]" name="createUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:38 IST" finished-at="2023-10-01T08:02:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetUp -->
        <test-method status="PASS" signature="circuitDetailsTest()[pri:0, instance:com.qa.gorest.tests.GetCircuitDetails@2abf4075]" name="circuitDetailsTest" duration-ms="1703" started-at="2023-10-01T08:02:38 IST" finished-at="2023-10-01T08:02:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- circuitDetailsTest -->
        <test-method status="PASS" signature="createUserSetUp()[pri:0, instance:com.qa.gorest.tests.GetCircuitDetails@2abf4075]" name="createUserSetUp" is-config="true" duration-ms="0" started-at="2023-10-01T08:02:40 IST" finished-at="2023-10-01T08:02:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserSetUp -->
        <test-method status="PASS" signature="circuitDetailsTestJsonPath()[pri:0, instance:com.qa.gorest.tests.GetCircuitDetails@2abf4075]" name="circuitDetailsTestJsonPath" duration-ms="1281" started-at="2023-10-01T08:02:40 IST" finished-at="2023-10-01T08:02:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- circuitDetailsTestJsonPath -->
      </class> <!-- com.qa.gorest.tests.GetCircuitDetails -->
    </test> <!-- Circuit API Test -->
    <test name="Flight API Test" duration-ms="3172" started-at="2023-10-01T08:02:41 IST" finished-at="2023-10-01T08:02:45 IST">
      <class name="com.qa.gorest.tests.GetFlightDetails">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.qa.gorest.tests.GetFlightDetails@77eca502]" name="setUp" is-config="true" duration-ms="16" started-at="2023-10-01T08:02:41 IST" finished-at="2023-10-01T08:02:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://test.api.amadeus.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.gorest.tests.GetFlightDetails@77eca502]" name="setUp" is-config="true" duration-ms="1313" started-at="2023-10-01T08:02:41 IST" finished-at="2023-10-01T08:02:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[client_credentials]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TAnRnsU5lASXZ8mPGdwRQZMoQzhu6Gwv]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[VjjgfcJilNAzcSJw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getFlightDetails()[pri:0, instance:com.qa.gorest.tests.GetFlightDetails@77eca502]" name="getFlightDetails" duration-ms="1843" started-at="2023-10-01T08:02:43 IST" finished-at="2023-10-01T08:02:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFlightDetails -->
      </class> <!-- com.qa.gorest.tests.GetFlightDetails -->
    </test> <!-- Flight API Test -->
  </suite> <!-- API Regression Suite -->
</testng-results>
